/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package views;

import java.util.List;
import javax.persistence.EntityManager;
import javax.swing.JOptionPane;
import models.ModeloTablaCategorias;
import models.Tipoproducto;

/**
 *
 * @author clara
 */
public class VentanaAdministrarCategorias extends javax.swing.JDialog {

    /**
     * Creates new form VentanaAdministrarCategorias
     */
    private PanelPrincipal panelMain;

    public VentanaAdministrarCategorias(PanelPrincipal parent, boolean modal) {
        super(parent, modal);
        this.panelMain = parent;
        initComponents();
        cargarDatosJTable();
        setLocationRelativeTo(panelMain);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jBtnAgregar = new javax.swing.JButton();
        jBtnModificar = new javax.swing.JButton();
        jBtnBorrar = new javax.swing.JButton();
        jBtnVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Wok & Roll - Administrar categorías");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jBtnAgregar.setBackground(new java.awt.Color(204, 255, 204));
        jBtnAgregar.setForeground(new java.awt.Color(0, 0, 0));
        jBtnAgregar.setText("AGREGAR");
        jBtnAgregar.setToolTipText("Agregar un producto nuevo");
        jBtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarActionPerformed(evt);
            }
        });

        jBtnModificar.setBackground(new java.awt.Color(204, 255, 204));
        jBtnModificar.setForeground(new java.awt.Color(0, 0, 0));
        jBtnModificar.setText("MODIFICAR");
        jBtnModificar.setToolTipText("Modificar el producto seleccionado");
        jBtnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnModificarActionPerformed(evt);
            }
        });

        jBtnBorrar.setBackground(new java.awt.Color(204, 255, 204));
        jBtnBorrar.setForeground(new java.awt.Color(0, 0, 0));
        jBtnBorrar.setText("BORRAR");
        jBtnBorrar.setToolTipText("Borrar el producto seleccionado");
        jBtnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBorrarActionPerformed(evt);
            }
        });

        jBtnVolver.setBackground(new java.awt.Color(204, 255, 204));
        jBtnVolver.setForeground(new java.awt.Color(0, 0, 0));
        jBtnVolver.setText("VOLVER");
        jBtnVolver.setToolTipText("Volver al menú principal");
        jBtnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnVolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBtnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jBtnAgregar)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnModificar)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnBorrar)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnVolver)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarActionPerformed
        // TODO add your handling code here:
        new VentanaAgregarCategoria(panelMain, true).setVisible(true);
        // Una vez termine la ejecución de la ventana Agregar
        // Llamo a cargar de nuevo los datos en el jTable con los cambios
        cargarDatosJTable();
    }//GEN-LAST:event_jBtnAgregarActionPerformed

    private void jBtnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnModificarActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "No has seleccionado ningún registro");
        } else {
            //modificamos el producto seleccionado
            //primero obtenemos el id del producto seleccionado
            int selectedRow = jTable1.getSelectedRow();
            Integer idTipoProducto = (Integer) jTable1.getValueAt(selectedRow, 0);
            EntityManager em = panelMain.emf.createEntityManager();
            try {
                //verificamos si el producto está o no en un ticket
                boolean productoEnTicket = em.createQuery(
                        "SELECT COUNT(d) FROM Detalletickets d WHERE d.productos.idTipoProducto.idTipoProducto = :idTipoProducto", Long.class)
                        .setParameter("idTipoProducto", idTipoProducto)
                        .getSingleResult() > 0;
                //si está no se borra
                if (productoEnTicket) {
                    JOptionPane.showMessageDialog(null, "La categoría no puede ser modificado porque está presente en un ticket.");
                } else {
                    new VentanaModificarCategoria(panelMain, true, idTipoProducto).setVisible(true);
                    //                JOptionPane.showMessageDialog(null, "Producto modificado exitosamente.");
                }
                // Una vez termine la ejecución de la ventana
                // Llamo a cargar de nuevo los datos en el jTable con los cambios
                cargarDatosJTable();
            } catch (Exception e) {
                e.printStackTrace();

            } finally {
                em.close();
                //si lo cerramos peta
                //                emf.close();
            }
        }
    }//GEN-LAST:event_jBtnModificarActionPerformed

    private void jBtnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBorrarActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() < 0) {
            JOptionPane.showMessageDialog(null, "No has seleccionado ningún registro");
        } else {
            //borramos el producto seleccionado
            //primero obtenemos el id del producto seleccionado
            int selectedRow = jTable1.getSelectedRow();
            Integer idTipoProducto = (Integer) jTable1.getValueAt(selectedRow, 0);

            EntityManager em = panelMain.emf.createEntityManager();
            try {
                //verificamos si el producto está o no en un ticket
                boolean productoEnTicket = em.createQuery(
                        "SELECT COUNT(d) FROM Detalletickets d WHERE d.productos.idTipoProducto.idTipoProducto = :idTipoProducto", Long.class)
                        .setParameter("idTipoProducto", idTipoProducto)
                        .getSingleResult() > 0;
                //si está no se borra
                if (productoEnTicket) {
                    JOptionPane.showMessageDialog(null, "La categoría no puede ser modificado porque está presente en un ticket.");
                } else {
                    //sino está lo eliminamos
                    em.getTransaction().begin();
                    Tipoproducto tipoproducto = em.find(Tipoproducto.class, idTipoProducto);

                    panelMain.tpjc.destroy(idTipoProducto);
                    em.getTransaction().commit();
                    JOptionPane.showMessageDialog(null, "Categoría borrada exitosamente.");

                    // Una vez termine la ejecución
                    // Llamo a cargar de nuevo los datos en el jTable con los cambios
                    cargarDatosJTable();
                }
            } catch (Exception e) {
                e.printStackTrace();
                if (em.getTransaction().isActive()) {
                    em.getTransaction().rollback();
                }
                JOptionPane.showMessageDialog(null, "Ocurrió un error al intentar borrar el producto.");
            } finally {
                em.close();
                //si lo cerramos peta
                //                emf.close();
            }

        }
    }//GEN-LAST:event_jBtnBorrarActionPerformed

    private void jBtnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnVolverActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jBtnVolverActionPerformed

    // Este método inserta los datos de la lista en el jtable
    private void cargarDatosJTable() {

        // Se crea el modelo de datos que contendrá el JTable
        // Este modelo se rellena de datos y luego se asocia al JTable
        ModeloTablaCategorias modelo = new ModeloTablaCategorias();

        // Array de object con el número de columnas del jtable
        // Para guardar cada campo de cada Persona de la lista
        Object[] fila = new Object[modelo.getColumnCount()];

        //obtenemos los datos de la base de datos
        EntityManager em = panelMain.emf.createEntityManager();

        try {
            List<Tipoproducto> productosList = em.createNamedQuery("Tipoproducto.findAll", Tipoproducto.class
            ).getResultList();

            // Depuración: verificar si se obtuvieron productos
            if (productosList.isEmpty()) {
                System.out.println("No se encontraron productos en la base de datos.");
            } else {
                System.out.println("Número de productos encontrados: " + productosList.size());
            }

            // Añadir los datos al modelo de la tabla
            for (Tipoproducto producto : productosList) {
                fila[0] = producto.getIdTipoProducto();
                fila[1] = producto.getNomCategoria();
                fila[2] = producto.getNomTipoProducto();

                modelo.addRow(fila);
            }
        } catch (Exception e) {
            // Depuración: imprimir la pila de errores si ocurre una excepción
            e.printStackTrace();
        } finally {
            em.close();
            //si lo cerramos peta
//            emf.close();
        }

        // Decimos al JTable el modelo a usar
        jTable1.setModel(modelo);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAgregar;
    private javax.swing.JButton jBtnBorrar;
    private javax.swing.JButton jBtnModificar;
    private javax.swing.JButton jBtnVolver;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
